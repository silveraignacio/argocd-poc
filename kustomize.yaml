apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: opa-exporter
rules:
- apiGroups:
  - constraints.gatekeeper.sh
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: opa-exporter-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: opa-exporter
subjects:
- kind: ServiceAccount
  name: default
  namespace: gatekeeper-system
---
apiVersion: v1
data:
  opa-dashboard.json: |-
    {
      "annotations": {
        "list": [
          {
            "builtIn": 1,
            "datasource": "-- Grafana --",
            "enable": true,
            "hide": true,
            "iconColor": "rgba(0, 211, 255, 1)",
            "name": "Annotations & Alerts",
            "type": "dashboard"
          }
        ]
      },
      "editable": true,
      "gnetId": null,
      "graphTooltip": 0,
      "iteration": 1623760339456,
      "links": [],
      "panels": [
        {
          "datasource": null,
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "custom": {
                "align": "left",
                "displayMode": "auto",
                "filterable": false
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "violating_name"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 170
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "violating_kind"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 169
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 8,
            "w": 24,
            "x": 0,
            "y": 0
          },
          "id": 2,
          "options": {
            "showHeader": true,
            "sortBy": []
          },
          "pluginVersion": "8.0.0",
          "targets": [
            {
              "exemplar": true,
              "expr": "opa_scorecard_constraint_violations{violating_namespace=\"$namespace\"}",
              "format": "table",
              "instant": true,
              "interval": "",
              "intervalFactor": 1,
              "legendFormat": "",
              "refId": "A"
            }
          ],
          "timeFrom": null,
          "timeShift": null,
          "title": "OPA Violations",
          "transformations": [
            {
              "id": "filterFieldsByName",
              "options": {
                "include": {
                  "names": [
                    "kind",
                    "name",
                    "violating_kind",
                    "violating_name",
                    "violation_msg"
                  ]
                }
              }
            }
          ],
          "type": "table"
        },
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "datasource": null,
          "fieldConfig": {
            "defaults": {
              "unit": "short"
            },
            "overrides": []
          },
          "fill": 2,
          "fillGradient": 0,
          "gridPos": {
            "h": 7,
            "w": 24,
            "x": 0,
            "y": 8
          },
          "hiddenSeries": false,
          "id": 4,
          "legend": {
            "avg": false,
            "current": false,
            "max": false,
            "min": false,
            "show": true,
            "total": false,
            "values": false
          },
          "lines": true,
          "linewidth": 1,
          "nullPointMode": "null",
          "options": {
            "alertThreshold": true
          },
          "percentage": false,
          "pluginVersion": "8.0.0",
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "exemplar": true,
              "expr": "count(opa_scorecard_constraint_violations{violating_namespace=\"$namespace\"})",
              "interval": "",
              "legendFormat": "Overall OPA violations per namespace",
              "refId": "A"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "OPA Violations Over Time",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "$$hashKey": "object:107",
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            },
            {
              "$$hashKey": "object:108",
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "datasource": "${datasource}",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 0,
            "y": 15
          },
          "id": 8,
          "options": {
            "displayMode": "gradient",
            "orientation": "auto",
            "reduceOptions": {
              "calcs": [
                "lastNotNull"
              ],
              "fields": "",
              "values": false
            },
            "showUnfilled": true,
            "text": {}
          },
          "pluginVersion": "8.0.0",
          "targets": [
            {
              "exemplar": true,
              "expr": "sum by (kind) (opa_scorecard_constraint_violations{violating_namespace=\"$namespace\"})",
              "format": "time_series",
              "interval": "",
              "legendFormat": "{{kind}}",
              "refId": "A"
            }
          ],
          "title": "Total Violations by kind",
          "transformations": [],
          "type": "bargauge"
        },
        {
          "datasource": "${datasource}",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                }
              },
              "mappings": []
            },
            "overrides": []
          },
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 12,
            "y": 15
          },
          "id": 6,
          "options": {
            "legend": {
              "displayMode": "list",
              "placement": "bottom"
            },
            "pieType": "pie",
            "reduceOptions": {
              "calcs": [
                "lastNotNull"
              ],
              "fields": "",
              "values": false
            },
            "tooltip": {
              "mode": "single"
            }
          },
          "targets": [
            {
              "exemplar": true,
              "expr": "sum(opa_scorecard_constraint_information{enforcementAction=\"dryrun\"})",
              "interval": "",
              "legendFormat": "enforcementAction=\"dryrun\"",
              "refId": "A"
            },
            {
              "exemplar": true,
              "expr": "sum(opa_scorecard_constraint_information{enforcementAction=\"deny\"})",
              "hide": false,
              "interval": "",
              "legendFormat": "enforcementAction=\"deny\"",
              "refId": "B"
            },
            {
              "exemplar": true,
              "expr": "sum(opa_scorecard_constraint_information{enforcementAction=\"warn\"})",
              "hide": false,
              "interval": "",
              "legendFormat": "",
              "refId": "C"
            }
          ],
          "title": "Enforcement Actions",
          "type": "piechart"
        }
      ],
      "refresh": false,
      "schemaVersion": 30,
      "style": "dark",
      "tags": [],
      "templating": {
        "list": [
          {
            "current": {
              "selected": false,
              "text": "default",
              "value": "default"
            },
            "description": null,
            "error": null,
            "hide": 0,
            "includeAll": false,
            "label": null,
            "multi": false,
            "name": "datasource",
            "options": [],
            "query": "prometheus",
            "queryValue": "",
            "refresh": 1,
            "regex": "",
            "skipUrlSync": false,
            "type": "datasource"
          },
          {
            "allValue": null,
            "current": {
              "isNone": true,
              "selected": false,
              "text": "None",
              "value": ""
            },
            "datasource": null,
            "definition": "label_values(kube_pod_info, cluster)",
            "description": null,
            "error": null,
            "hide": 0,
            "includeAll": false,
            "label": null,
            "multi": false,
            "name": "cluster",
            "options": [],
            "query": {
              "query": "label_values(kube_pod_info, cluster)",
              "refId": "StandardVariableQuery"
            },
            "refresh": 1,
            "regex": "",
            "skipUrlSync": false,
            "sort": 0,
            "tagValuesQuery": "",
            "tagsQuery": "",
            "type": "query",
            "useTags": false
          },
          {
            "allValue": null,
            "current": {
              "selected": false,
              "text": "prometheus",
              "value": "prometheus"
            },
            "datasource": "$datasource",
            "definition": "",
            "description": null,
            "error": null,
            "hide": 0,
            "includeAll": false,
            "label": null,
            "multi": false,
            "name": "namespace",
            "options": [],
            "query": {
              "query": "label_values(kube_pod_info{cluster=\"$cluster\"}, namespace)",
              "refId": "Prometheus-namespace-Variable-Query"
            },
            "refresh": 2,
            "regex": "",
            "skipUrlSync": false,
            "sort": 1,
            "tagValuesQuery": "",
            "tagsQuery": "",
            "type": "query",
            "useTags": false
          }
        ]
      },
      "time": {
        "from": "now-5m",
        "to": "now"
      },
      "timepicker": {
        "refresh_intervals": [
          "5s",
          "10s",
          "30s",
          "1m",
          "5m",
          "15m",
          "30m",
          "1h",
          "2h",
          "1d"
        ],
        "time_options": [
          "5m",
          "15m",
          "1h",
          "6h",
          "12h",
          "24h",
          "2d",
          "7d",
          "30d"
        ]
      },
      "timezone": "UTC",
      "title": "OPA Violations",
      "uid": "YBgRZG6Mz",
      "version": 1
    }
kind: ConfigMap
metadata:
  labels:
    grafana_dashboard: "1"
  name: opa-grafana-dashboard
  namespace: monitoring
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/scrape-slow: "true"
  creationTimestamp: null
  labels:
    app: opa-exporter
  name: opa-exporter
  namespace: gatekeeper-system
spec:
  ports:
  - name: metrics
    port: 9141
    protocol: TCP
    targetPort: 9141
  selector:
    app: opa-exporter
  type: ClusterIP
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: opa-exporter
  name: opa-exporter
  namespace: gatekeeper-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: opa-exporter
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: opa-exporter
    spec:
      containers:
      - image: mcelep/opa_scorecard_exporter:v0.0.3
        name: opa-scorecard-exporter-ldscm
        resources: {}
status: {}
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: gatekeeper
  namespace: argocd
spec:
  destination:
    namespace: gatekeeper-system
    server: https://kubernetes.default.svc
  project: default
  sources:
  - chart: gatekeeper
    repoURL: https://open-policy-agent.github.io/gatekeeper/charts
    targetRevision: 3.14.0
  - path: opa-exporter
    repoURL: https://github.com/silveraignacio/argocd-poc.git
  syncPolicy:
    automated:
      selfHeal: true
    syncOptions:
    - CreateNamespace=true
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: jenkins
  namespace: argocd
spec:
  destination:
    namespace: cicd
    server: https://kubernetes.default.svc
  project: default
  sources:
  - ref: values
    repoURL: https://github.com/silveraignacio/argocd-poc.git
  - chart: jenkins
    helm:
      valueFiles:
      - $values/values/jenkins.yaml
    repoURL: https://charts.jenkins.io
    targetRevision: 4.5.0
  syncPolicy:
    automated:
      selfHeal: true
    syncOptions:
    - CreateNamespace=true
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: prometheus-monitoring
  namespace: argocd
spec:
  destination:
    namespace: monitoring
    server: https://kubernetes.default.svc
  project: default
  sources:
  - ref: values
    repoURL: https://github.com/silveraignacio/argocd-poc.git
  - chart: kube-prometheus-stack
    helm:
      valueFiles:
      - $values/values/prometheus.yaml
    repoURL: https://prometheus-community.github.io/helm-charts
    targetRevision: 48.3.1
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
    - CreateNamespace=true
    - ServerSideApply=true
